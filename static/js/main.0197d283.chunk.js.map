{"version":3,"sources":["components/Container/Container.jsx","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.jsx","components/Filter/FIlter.jsx","App.js","index.js"],"names":["Container","children","className","TodoList","todos","onDeleteTodo","onToggleCompleted","map","id","text","completed","classNames","type","checked","onChange","onClick","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","Component","Filter","class","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","completedTodoCount","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0197d283.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text, completed }) => (\n      <li\n        key={id}\n        className={classNames('TodoList__item', {\n          'TodoList__item--completed': completed,\n        })}\n      >\n        <label className=\"TodoList__label\">\n          <input\n            type=\"checkbox\"\n            className=\"TodoList__checkbox\"\n            checked={completed}\n            onChange={() => onToggleCompleted(id)}\n          />\n          <p className=\"TodoList__text\">{text}</p>\n        </label>\n        <button\n          type=\"button\"\n          className=\"TodoList__btn\"\n          onClick={() => onDeleteTodo(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import React from 'react';\nimport './Filter.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <label class=\"filter\">\n    <p class=\"filter__text\">Filter by name:</p>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      class=\"filter__input\"\n    />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport TodoList from './components/TodoList';\nimport TodoEditor from './components/TodoEditor';\nimport Filter from './components/Filter';\nimport initialTodos from './data-json/todoListData.json';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  toggleCompleted = todoId => {\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCount = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        <div>\n          <p>Total count: {totalTodoCount}</p>\n          <p>Completed: {completedTodoCount}</p>\n        </div>\n\n        <TodoEditor onSubmit={this.addTodo} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}